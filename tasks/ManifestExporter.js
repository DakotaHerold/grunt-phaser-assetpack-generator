
//'use strict'; 

module.exports = function(grunt){
    

    grunt.registerMultiTask('ManifestExporter', 'A task that parses phaser asset packs into referenceable javascript variables for phaser.', function() {
       
        //grunt.log.write(this.data.files.src); 
        var rawJSON = grunt.file.readJSON(this.data.files.src); 
        var _assets = rawJSON.assets; 
        var _images = null; 
        var _audio = null; 
        var _text = null; 
        var _json = null; 
        var _xml = null; 

        
        //grunt.log.write(_assets); 

        // Parse json data from file into usable variables 
        var assetIndex; 
        for(assetIndex = 0; assetIndex < _assets.length; assetIndex++)
        {
            switch(_assets[assetIndex].type)
            {
                case 'image':
                    if(_images === null)
                    {
                        _images = new Array(); 
                        _images.push(_assets[assetIndex]); 
                    }
                    else 
                    {
                        _images.push(_assets[assetIndex]); 
                    }
                    
                    break; 
                case 'audio':

                    if(_audio === null)
                    {
                        _audio = new Array(); 
                        _audio.push(_assets[assetIndex]); 
                    }
                    else 
                    {
                        _audio.push(_assets[assetIndex]); 
                    }
                    break; 
                case 'text':

                    if(_text === null)
                    {
                        _text = new Array(); 
                        _text.push(_assets[assetIndex]); 
                    }
                    else 
                    {
                        _text.push(_assets[assetIndex]); 
                    }
                    break; 
                case 'json':

                    if(_json === null)
                    {
                        _json = new Array(); 
                        _json.push(_assets[assetIndex]); 
                    }
                    else 
                    {
                        _json.push(_assets[assetIndex]); 
                    }
                    break; 
                case 'xml':

                    if(_xml === null)
                    {
                        _xml = new Array(); 
                        _xml.push(_assets[assetIndex]); 
                    }
                    else 
                    {
                        _xml.push(_assets[assetIndex]); 
                    }
                    break; 
            }
        }


        // Create JS file

        var fileStr = "// Asset Manfiest Reference Classes. Generated by grunt. Copyright Dakota Herold 2020 \n\n"

        // Images Class 
        fileStr += "class Images {"; 

        fileStr += "\n  constructor() {"
        if(_images === null)
        {
            fileStr += '\n'; 
        }
        else 
        {
            var i; 
            for(i = 0; i < _images.length; i++)
            {
                fileStr += "\n      this." + _images[i].key.toString() + " = \"" + _images[i].url.toString() + "\";";  
            }
        }
        fileStr += "\n  }"; 


        fileStr += "\n}\n\n"; 

        // Audio Class
        fileStr += "class Audio {"; 
        fileStr += "\n  constructor() {"

        if(_audio === null)
        {
            fileStr += '\n'; 
        }
        else 
        {
            var i; 
            for(i = 0; i < _audio.length; i++)
            {
                fileStr += "\n      this." + _audio[i].key.toString() + " = \"" + _audio[i].urls.toString() + "\";";  
            }
        }
        fileStr += "\n  }"; 

        fileStr += "\n}\n\n"; 

        // Text 
        fileStr += "class Text {"; 
        fileStr += "\n  constructor() {"

        if(_text === null)
        {
            fileStr += '\n'; 
        }
        else 
        {
            var i; 
            for(i = 0; i < _text.length; i++)
            {
                fileStr += "\n      this." + _text[i].key.toString() + " = \"" + _text[i].urls.toString() + "\";";  
            }
        }
        fileStr += "\n  }"; 

        fileStr += "\n}\n\n"; 

        // JSON 
        fileStr += "\nclass Json {"; 
        fileStr += "\n  constructor() {"

        if(_json === null)
        {
            fileStr += '\n'; 
        }
        else 
        {
            var i; 
            for(i = 0; i < _json.length; i++)
            {
                fileStr += "\n      this." + _json[i].key.toString() + " = \"" + _json[i].urls.toString() + "\";";  
            }
        }
        fileStr += "\n  }"; 

        fileStr += "\n}\n\n"; 

        // XML 
        fileStr += "class Xml {"; 
        fileStr += "\n  constructor() {"

        if(_xml === null)
        {
            fileStr += '\n'; 
        }
        else 
        {
            var i; 
            for(i = 0; i < _xml.length; i++)
            {
                fileStr += "\n      this." + _xml[i].key.toString() + " = \"" + _xml[i].urls.toString() + "\";";  
            }
        }
        fileStr += "\n  }"; 

        fileStr += "\n}\n\n"; 

        fileStr += "\n"

        // Create Asset Manifest class 
        fileStr += "export class AssetManifest {"; 

        fileStr += "\n  constructor() {"
        fileStr += "\n      this.Images = new Images();"; 
        fileStr += "\n      this.Audio = new Audio();"; 
        fileStr += "\n      this.Text = new Text();"; 
        fileStr += "\n      this.Json = new Json();"; 
        fileStr += "\n      this.Xml = new Xml();"; 
        fileStr += "\n  }"; 
        fileStr += "\n}\n\n"; 

        // Export modules 
        //fileStr += "module.exports = { Images, Audio, Text, Json, Xml }";


        // Write to file
        grunt.file.defaultEncoding = 'utf8';
        grunt.file.write(this.data.files.dest, fileStr); 

    }); // end task 
}; // end exports 

